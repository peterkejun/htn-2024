[agent]
  interval = "1s"
  metric_batch_size = 100
  flush_interval = "1s"

[[inputs.cpu]]
  interval = "1s"
  ## Whether to report per-cpu stats or not
  percpu = false
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states
  ## NOTE: The resulting 'time_active' field INCLUDES 'iowait'!
  report_active = false
  ## If true and the info is available then add core_id and physical_id tags
  core_tags = false


[[inputs.ping]]
  interval = "3s"
  ## Hosts to send ping packets to.
  urls = ["8.8.8.8"]

  ## Method used for sending pings, can be either "exec" or "native".  When set
  ## to "exec" the systems ping command will be executed.  When set to "native"
  ## the plugin will send pings directly.
  ##
  ## While the default is "exec" for backwards compatibility, new deployments
  ## are encouraged to use the "native" method for improved compatibility and
  ## performance.
  method = "native"

  ## Number of ping packets to send per interval.  Corresponds to the "-c"
  ## option of the ping command.
  count = 10

  ## Time to wait between sending ping packets in seconds.  Operates like the
  ## "-i" option of the ping command.
  ping_interval = 0.2

  # If set, the time to wait for a ping response in seconds.  Operates like
  # the "-W" option of the ping command.
  timeout = 1.0

  ## Interface or source address to send ping from.  Operates like the -I or -S
  ## option of the ping command.
  # interface = ""

  # Percentiles to calculate. This only works with the native method.
  percentiles = [50, 95, 99]

  size = 24

[[inputs.hddtemp]]
  # By default, telegraf gathers temps data from all disks detected by the
  # hddtemp.
  #
  # Only collect temps from the selected disks.
  #
  # A * as the device name will return the temperature values of all disks.
  #
  address = "127.0.0.1:7634"
  devices = ["sda", "*"]

[[outputs.file]]
  files = ["stdout"]

[[outputs.http]]
  namepass = ["ping", "cpu"]
  url = "http://localhost:3000/api/live/push/telegraf"
  data_format = "influx"
  [outputs.http.headers]
    Authorization = "Bearer ${GRAFANA_SERVICE_ACCOUNT_TOKEN}"
